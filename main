#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char id[10];
    char pin[5];
    float saldo;
} Usuario;

Usuario usuarios[100];
int numUsuarios = 0;
Usuario *usuarioActual = NULL;

void cargarDatos();
void guardarDatos();
void iniciarSesion();
void salir();
void consultarSaldo();
void retirarDinero();
void depositarDinero();
void cambiarPIN();
void mostrarMenu();


int main() {
    cargarDatos();
    iniciarSesion();
    mostrarMenu();
    guardarDatos();
    return 0;
}


void cargarDatos() {
    FILE *archivo = fopen("usuarios.dat", "rb");
    if (archivo) {                                            // Funciones de Persistencia de Datos
        fread(&numUsuarios, sizeof(int), 1, archivo);
        fread(usuarios, sizeof(Usuario), numUsuarios, archivo);
        fclose(archivo);
    }

    if (numUsuarios == 0) {
        strcpy(usuarios[0].id, "1"); //Si no se cambia el pin, utilizar el creado
        strcpy(usuarios[0].pin, "12345");      
        usuarios[0].saldo = 1000.0; // Saldo inicial
        numUsuarios = 1;
        guardarDatos(); // Guardar datos inicializados
    }
}

void guardarDatos() {
    FILE *archivo = fopen("usuarios.dat", "wb");
    fwrite(&numUsuarios, sizeof(int), 1, archivo);
    fwrite(usuarios, sizeof(Usuario), numUsuarios, archivo);
    fclose(archivo);
}

void iniciarSesion() {
    char id[10];
    char pin[5];
    int intentos = 0;

    while (intentos < 3) {
        printf("\n--- CAJERO AUTOMATICO ---\n");
    	printf("--- Aguero Ferreyra ---\n");
		printf("Ingrese su ID de usuario: ");
        scanf("%s", id);
        printf("Ingrese su PIN: ");
        scanf("%s", pin);

        for (int i = 0; i < numUsuarios; i++) {
            if (strcmp(usuarios[i].id, id) == 0 && strcmp(usuarios[i].pin, pin) == 0) {
                usuarioActual = &usuarios[i];
                printf("Inicio de sesion exitoso.\n");
                return;
            }
        }
        printf("ID de usuario o PIN incorrecto. Intente nuevamente.\n");
        intentos++;
    }
    printf("Demasiados intentos fallidos. Cuenta bloqueada temporalmente.\n");
    exit(1);
}

void salir() {
	printf("Gracias por usar el servicio.");
    exit(1);
}

void consultarSaldo() {
    if (usuarioActual) {
        printf("Su saldo actual es: $%.2f\n", usuarioActual->saldo);
    } 
}

void retirarDinero() {
    if (usuarioActual) {
        float monto;
        printf("Ingrese el monto a retirar: ");
        scanf("%f", &monto);
        if (monto > 0 && monto <= usuarioActual->saldo) {
            usuarioActual->saldo -= monto;
            printf("Retiro exitoso. Su nuevo saldo es: $%.2f\n", usuarioActual->saldo);
            guardarDatos();
        } else {
            printf("Saldo insuficiente o monto invalido.\n");
        }
    }
}

void depositarDinero() {
    if (usuarioActual) {
        float monto;
        printf("Ingrese el monto a depositar: ");
        scanf("%f", &monto);
        if (monto > 0) {
            usuarioActual->saldo += monto;
            printf("Deposito exitoso. Su nuevo saldo es: $%.2f\n", usuarioActual->saldo);
            guardarDatos();
        } else {
            printf("Monto invalido.\n");
        }
    } 
}

void cambiarPIN() {
    if (usuarioActual) {
        char pinActual[5];
        char nuevoPIN[5];

        printf("Ingrese su PIN actual: ");
        scanf("%s", pinActual);

        if (strcmp(usuarioActual->pin, pinActual) == 0) {
            printf("Ingrese su nuevo PIN: ");
            scanf("%s", nuevoPIN);
            strcpy(usuarioActual->pin, nuevoPIN);
            printf("Cambio de PIN exitoso.\n");
            guardarDatos();
        } else {
            printf("PIN actual incorrecto.\n");
        }
    } 
}

void mostrarMenu() {
    int opcion;
    do {
        printf("\n--- Menu Principal ---\n");
        printf("1. Consultar saldo\n");
        printf("2. Retirar dinero\n");
        printf("3. Depositar dinero\n");
        printf("4. Cambiar PIN\n");
        printf("5. Salir\n");
        printf("Seleccione una opcion: ");
        scanf("%d", &opcion);
        switch (opcion) {
            case 1:
                consultarSaldo();
                break;
            case 2:
                retirarDinero();
                break;
            case 3:
                depositarDinero();
                break;
            case 4:
                cambiarPIN();
                break;
            case 5:
                salir();
                break;
            default:
                printf("Opcion invalida.\n");
        }
    } while (opcion != 5);
}
/*
Funcion para que no crashee al poner una letra

int esNumeroValido(const char *str) {
    int puntoEncontrado = 0;
    for (int i = 0; i < strlen(str); i++) {
        if (!isdigit(str[i])) {
            if (str[i] == '.' && !puntoEncontrado) {
                puntoEncontrado = 1;
            } else if (str[i] == '\n') {
                continue;
            } else {
                return 0;
            }
        }
    }
    return 1;
}

void depositarDinero() {
    if (usuarioActual) {
        char input[100];
        float monto;

        printf("Ingrese el monto a depositar: ");
        fgets(input, sizeof(input), stdin);

        if (esNumeroValido(input) && sscanf(input, "%f", &monto) == 1 && monto > 0) {
            usuarioActual->saldo += monto;
            printf("Deposito exitoso. Su nuevo saldo es: $%.2f\n", usuarioActual->saldo);
            guardarDatos();
        } else {
            printf("Monto invalido. Por favor, ingrese un numero mayor a 0.\n");
        }
    } else {
        printf("Debe iniciar sesi√≥n primero.\n"); // no se va a utilizar
    }
} 
*/
